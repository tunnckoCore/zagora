{
  "name": "zagora",
  "version": "0.4.0",
  "license": "Apache-2.0",
  "description": "A minimalist & robust way to create type-safe and error-safe never throwing functions & libraries in TypeScript - with input/output validation and typed errors. Based on StandardSchema-compliant validation libraries. No batteries, no routers, it's just functions that you can export and use. Simple but robust alternative to oRPC and tRPC, no network layer.",
  "repository": {
    "type": "git",
    "url": "https://github.com/tunnckoCore/zagora.git"
  },
  "type": "module",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js"
    },
    "./source": "./src/index.ts",
    "./index.ts": "./src/index.ts"
  },
  "module": "dist/index.ts",
  "files": [
    "src",
    "dist"
  ],
  "scripts": {
    "build": "tsdown src/index.ts --dts",
    "test": "bun test",
    "test:coverage": "bun test --coverage",
    "prepublishOnly": "bun run build"
  },
  "dependencies": {
    "@standard-schema/spec": "^1.0.0"
  },
  "devDependencies": {
    "@biomejs/biome": "2.2.3",
    "@types/bun": "latest",
    "arktype": "2.1.22",
    "tsdown": "0.14.1",
    "typescript": "5.9.2",
    "ultracite": "5.3.4",
    "valibot": "1.1.0",
    "zod": "4.1.5"
  },
  "keywords": [
    "minimal",
    "rpc",
    "procedures",
    "typescript",
    "typesafe",
    "type-safe",
    "error-safe",
    "functions",
    "funcs",
    "fn"
  ]
}
